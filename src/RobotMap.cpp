// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// C++ from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


#include "RobotMap.h"
#include "LiveWindow/LiveWindow.h"


// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=ALLOCATION
std::shared_ptr<Encoder> RobotMap::pIDSystemQuadratureEncoder1;
std::shared_ptr<SpeedController> RobotMap::pIDSystemSpeedController1;
// END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=ALLOCATION

void RobotMap::init() {
    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS
    LiveWindow *lw = LiveWindow::GetInstance();

    pIDSystemQuadratureEncoder1.reset(new Encoder(0, 1, false, Encoder::k4X));
    lw->AddSensor("PIDSystem", "Quadrature Encoder 1", pIDSystemQuadratureEncoder1);
    pIDSystemQuadratureEncoder1->SetDistancePerPulse(1.0);
    pIDSystemQuadratureEncoder1->SetPIDSourceType(PIDSourceType::kRate);
    pIDSystemSpeedController1.reset(new Talon(3));
    lw->AddActuator("PIDSystem", "Speed Controller 1", (Talon&) pIDSystemSpeedController1);
    

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS
}
